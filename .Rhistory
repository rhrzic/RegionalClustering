labs(fill = "Cluster")
gganimate::animate(p)
?gganimate
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Clustering EU regions (NUTS2) by Male Death Rates 2002 - 2016") +
labs(fill = "Cluster") +
transition_time(time) +
ease_aes('linear')
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
#geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Clustering EU regions (NUTS2) by Male Death Rates 2002 - 2016") +
labs(fill = "Cluster") +
transition_time(time) +
ease_aes('linear')
require(transformr)
install.packages("transformr")
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
#geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Clustering EU regions (NUTS2) by Male Death Rates 2002 - 2016") +
labs(fill = "Cluster") +
transition_time(time)
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
#geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Clustering EU regions (NUTS2) by Male Death Rates 2002 - 2016") +
labs(fill = "Cluster") +
transition_manual(time)
map5 <- map5 %>% mutate_if(time %in% 2004:2012, cluster = ifelse(cluster == 1, 2, 1))
map5 %>% mutate_if(time %in% 2004:2012, cluster = ifelse(cluster == 1, 2, 1))
map5 %>% mutate_if(time == 2004, cluster = ifelse(cluster == 1, 2, 1))
map5 %>% mutate_at(time == 2004, cluster = ifelse(cluster == 1, 2, 1))
map5 %>% mutate(cluster = ifelse(cluster == 1 & time %in% 2004:2012, 2, 1))
map5 <- data.frame()
for (i in unique(data_analysis_men$time)) {
set.seed(12)
fit <- data_analysis_men %>%
filter(time == i) %>%
select(M_Y00:`M_Y85+`) %>%
scale() %>%
kmeans(., centers=2, nstart=50)
j <- order(fit$cluster)
map5 <- map5 %>% bind_rows(data.frame(time = i, geo = filter(data_analysis_men, time == i)$geo[j], cluster=fit$cluster[j]))
}
map5 <- map5 %>% inner_join(gisco, ., by = c("NUTS_ID" = "geo"))
map5 %>% mutate(cluster = ifelse(cluster == 1 & time %in% 2004:2012, 2, 1))
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
facet_wrap(. ~ time, ncol = 5) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Clustering EU regions (NUTS2) by Male Death Rates 2002 - 2016") +
labs(fill = "Cluster")
map5 <- data.frame()
for (i in unique(data_analysis_men$time)) {
set.seed(12)
fit <- data_analysis_men %>%
filter(time == i) %>%
select(M_Y00:`M_Y85+`) %>%
scale() %>%
kmeans(., centers=2, nstart=50)
j <- order(fit$cluster)
map5 <- map5 %>% bind_rows(data.frame(time = i, geo = filter(data_analysis_men, time == i)$geo[j], cluster=fit$cluster[j]))
}
map5 <- map5 %>% inner_join(gisco, ., by = c("NUTS_ID" = "geo"))
map5 <- map5 %>% mutate(cluster = ifelse(cluster == 1 & time %in% 2004:2012, 2, 1))
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
facet_wrap(. ~ time, ncol = 5) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Clustering EU regions (NUTS2) by Male Death Rates 2002 - 2016") +
labs(fill = "Cluster")
require(forcats)
map5 <- data.frame()
for (i in unique(data_analysis_men$time)) {
set.seed(12)
fit <- data_analysis_men %>%
filter(time == i) %>%
select(M_Y00:`M_Y85+`) %>%
scale() %>%
kmeans(., centers=2, nstart=50)
j <- order(fit$cluster)
map5 <- map5 %>% bind_rows(data.frame(time = i, geo = filter(data_analysis_men, time == i)$geo[j], cluster=fit$cluster[j]))
}
map5 <- map5 %>% inner_join(gisco, ., by = c("NUTS_ID" = "geo"))
require(forcats)
map5 <- map5 %>% mutate(cluster = ifelse(time %in% 2004:2012, fct_rev(cluster), cluster))
map5 <- data.frame()
for (i in unique(data_analysis_men$time)) {
set.seed(12)
fit <- data_analysis_men %>%
filter(time == i) %>%
select(M_Y00:`M_Y85+`) %>%
scale() %>%
kmeans(., centers=2, nstart=50)
j <- order(fit$cluster)
map5 <- map5 %>% bind_rows(data.frame(time = i, geo = filter(data_analysis_men, time == i)$geo[j], as.factor(cluster=fit$cluster[j])))
}
map5 <- data.frame()
for (i in unique(data_analysis_men$time)) {
set.seed(12)
fit <- data_analysis_men %>%
filter(time == i) %>%
select(M_Y00:`M_Y85+`) %>%
scale() %>%
kmeans(., centers=2, nstart=50)
j <- order(fit$cluster)
map5 <- map5 %>% bind_rows(data.frame(time = i, geo = filter(data_analysis_men, time == i)$geo[j], cluster=as.factor(fit$cluster[j])))
}
map5 <- map5 %>% inner_join(gisco, ., by = c("NUTS_ID" = "geo"))
require(forcats)
map5 <- map5 %>% mutate(cluster = ifelse(time %in% 2004:2012, fct_rev(cluster), cluster))
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
facet_wrap(. ~ time, ncol = 5) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Clustering EU regions (NUTS2) by Male Death Rates 2002 - 2016") +
labs(fill = "Cluster")
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
#geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Clustering EU regions (NUTS2) by Male Death Rates 2002 - 2016") +
labs(fill = "Cluster") +
transition_manual(time)
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
#geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title = "Clustering EU regions (NUTS2) by Male Death Rates {frame_time}", fill = "Cluster") +
transition_manual(time)
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title = 'Clustering EU regions (NUTS2) by Male Death Rates {frame_time}', fill = "Cluster") +
transition_time(time)
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title = 'Clustering EU regions (NUTS2) by Male Death Rates {frame_time}', fill = "Cluster") +
transition_manual(time)
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title = 'Clustering EU regions (NUTS2) by Male Death Rates {frame_time}', fill = "Cluster") +
transition_manual(time)
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title = 'Clustering EU regions (NUTS2) by Male Death Rates', fill = "Cluster") +
transition_manual(time)
ggplot(map6) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title = 'Clustering EU regions (NUTS2) by Female Death Rates 2002-2016', fill = "Cluster") +
transition_manual(time)
map6 <- data.frame()
for (i in unique(data_analysis_women$time)) {
set.seed(123456789)
fit <- data_analysis_women %>%
filter(time == i) %>%
select(F_Y00:`F_Y85+`) %>%
scale() %>%
kmeans(., centers=2, nstart=10)
j <- order(fit$cluster)
map6 <- map6 %>% bind_rows(data.frame(time = i, geo = filter(data_analysis_women, time == i)$geo[j], cluster=fit$cluster[j]))
}
require(forcats)
map6 <- map6 %>% mutate(cluster = ifelse(time %in% c(2003, 2005, 2008:2010, 2012, 2016), fct_rev(cluster), cluster))
map6 <- data.frame()
for (i in unique(data_analysis_women$time)) {
set.seed(123456789)
fit <- data_analysis_women %>%
filter(time == i) %>%
select(F_Y00:`F_Y85+`) %>%
scale() %>%
kmeans(., centers=2, nstart=10)
j <- order(fit$cluster)
map6 <- map6 %>% bind_rows(data.frame(time = i, geo = filter(data_analysis_women, time == i)$geo[j], cluster=as.factor(fit$cluster[j])))
}
require(forcats)
map6 <- map6 %>% mutate(cluster = ifelse(time %in% c(2003, 2005, 2008:2010, 2012, 2016), fct_rev(cluster), cluster))
map6 <- map6 %>% inner_join(gisco, ., by = c("NUTS_ID" = "geo"))
ggplot(map6) +
geom_sf(aes(fill = factor(cluster)), colour = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
facet_wrap(. ~ time, ncol = 5) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Clustering EU regions (NUTS2) by Female Death Rates in 2010") +
labs(fill = "Cluster")
ggplot(map6) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title = 'Clustering EU regions (NUTS2) by Female Death Rates 2002-2016', fill = "Cluster") +
transition_manual(time)
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title = 'Clustering EU regions (NUTS2) by Male Death Rates {current_frame}', fill = "Cluster") +
transition_manual(time)
ggplot(map6) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title = 'Clustering EU regions (NUTS2) by Female Death Rates {current_frame}', fill = "Cluster") +
transition_manual(time)
require(tidyverse)
require(ggplot2)
require(viridis)
require(eurostat)
require(sf)
data_raw <- get_eurostat("demo_r_mlife", time_format = "num")
data_working <- data_raw %>% filter(indic_de == "DEATHRATE")
glimpse(data_raw)
data_working %>% distinct(indic_de)
data_working %>% distinct(sex)
data_working %>% distinct(age)
data_working %>% distinct(geo)
data_working %>% distinct(time)
data_working %>% summarise(min = min(values), max = max(values), median = median(values))
data_working <- data_working %>% mutate(age = str_replace(age, "Y_LT1", "Y00"))
data_working <- data_working %>% mutate(age = str_replace(age, "Y_GE85", "Y85+"))
data_working <- data_working %>% mutate(age = str_replace(age, "Y1$", "Y01"))
data_working <- data_working %>% mutate(age = str_replace(age, "Y2$", "Y02"))
data_working <- data_working %>% mutate(age = str_replace(age, "Y3$", "Y03"))
data_working <- data_working %>% mutate(age = str_replace(age, "Y4$", "Y04"))
data_working <- data_working %>% mutate(age = str_replace(age, "Y5$", "Y05"))
data_working <- data_working %>% mutate(age = str_replace(age, "Y6$", "Y06"))
data_working <- data_working %>% mutate(age = str_replace(age, "Y7$", "Y07"))
data_working <- data_working %>% mutate(age = str_replace(age, "Y8$", "Y08"))
data_working <- data_working %>% mutate(age = str_replace(age, "Y9$", "Y09"))
data_working %>% summarise(min=min(age), max=max(age))
data_analysis <- filter(data_working,
!str_detect(geo, pattern = "AL"),
!str_detect(geo, pattern = "CH"),
!str_detect(geo, pattern = "IS"),
!str_detect(geo, pattern = "LI"),
!str_detect(geo, pattern = "ME"),
!str_detect(geo, pattern = "MK"),
!str_detect(geo, pattern = "NO"),
!str_detect(geo, pattern = "TR"))
data_analysis <- data_analysis %>% filter(str_detect(geo, pattern = "^[A-Z0-9]{4}$"))
data_analysis %>% select(geo) %>% n_distinct()
Missing <- data_analysis %>% group_by(geo, time) %>% summarise(available = sum(!is.na(values)) / length(values)) %>% arrange(desc(available))
Missing %>% group_by(time) %>% summarise(regions = sum(available) / 276) %>% print(n = 27)
ggplot(Missing, aes(x=time, y=geo)) +
geom_raster(aes(fill = available))
data_analysis_wide <- data_analysis %>% unite(col = sex_age, sex, age)
data_analysis_wide <- data_analysis_wide %>% spread(key = sex_age, value = values)
glimpse(data_analysis_wide)
data_analysis_T <- data_analysis_wide %>% select(geo, time, starts_with("T_"))
data_analysis_T <- data_analysis_T %>% mutate(ave_Mx = rowMeans(select(., starts_with("T_")), na.rm = TRUE)) %>% select(geo, time, ave_Mx)
#gisco <- get_eurostat_geospatial(output_class = "sf", resolution = "03", nuts_level = "2", year = "2016", cache = TRUE)
#gisco <- st_as_sf(gisco)
require(httr)
resp <- GET(paste0("http://ec.europa.eu/eurostat/cache/GISCO/distribution/v2/nuts/geojson/NUTS_RG_60M_2013_4326_LEVL_2.geojson"))
gisco <- st_read(content(resp, as="text"), stringsAsFactors = FALSE, quiet = TRUE)
resp <- GET(paste0("http://ec.europa.eu/eurostat/cache/GISCO/distribution/v2/nuts/geojson/NUTS_RG_60M_2013_4326_LEVL_0.geojson"))
gisco0 <- st_read(content(resp, as="text"), stringsAsFactors = FALSE, quiet = TRUE)
map0 <- data_analysis_T %>%
filter(time == 2010) %>%
inner_join(gisco, ., by = c("NUTS_ID" = "geo")) %>%
select(ave_Mx, geometry)
ggplot(map0) +
geom_sf(aes(fill = ave_Mx), colour = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
scale_fill_viridis() +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Death Rate by EU region (NUTS2) in 2010") +
labs(fill = "Average Death Rate")
map1 <- data_analysis_T %>%
filter(time >= 2002) %>%
inner_join(gisco, ., by = c("NUTS_ID" = "geo"))
ggplot(map1) +
geom_sf(aes(fill = ave_Mx), colour = "transparent", size = 0.1) +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
facet_wrap(. ~ time, ncol = 5) +
scale_fill_viridis() +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Death Rate by EU region (NUTS2) by Year") +
labs(fill = "Average Death Rate")
data_analysis_men <- data_analysis_wide %>% select(geo, time, starts_with("M_"))
data_analysis_men <- data_analysis_men %>% mutate(ave_Mx = rowMeans(select(., starts_with("M_")), na.rm = TRUE)) %>% select(geo, time, ave_Mx)
map2 <- data_analysis_men %>%
filter(time >= 2002) %>%
inner_join(gisco, ., by = c("NUTS_ID" = "geo"))
ggplot(map2) +
geom_sf(aes(fill = ave_Mx), colour = "transparent", size = 0.1) +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
facet_wrap(. ~ time, ncol = 5) +
scale_fill_viridis() +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Male Death Rate by EU region (NUTS2) by Year") +
labs(fill = "Average Male Death Rate")
data_analysis_women <- data_analysis_wide %>% select(geo, time, starts_with("F_"))
data_analysis_women <- data_analysis_women %>% mutate(ave_Mx = rowMeans(select(., starts_with("F_")), na.rm = TRUE)) %>% select(geo, time, ave_Mx)
map3 <- data_analysis_women %>%
filter(time >= 2002) %>%
inner_join(gisco, ., by = c("NUTS_ID" = "geo"))
ggplot(map3) +
geom_sf(aes(fill = ave_Mx), colour = "transparent", size = 0.1) +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
facet_wrap(. ~ time, ncol = 5) +
scale_fill_viridis() +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Female Death Rate by EU region (NUTS2) by Year") +
labs(fill = "Average Female Death Rate")
data_analysis_men <- data_analysis_wide %>%
select(geo, time, starts_with("M_")) %>%
filter(time == 2010) %>%
arrange(geo)
set.seed(123456789)
wssplot <- function(data, nc=15, seed=1234){
wss <- (nrow(data)-1)*sum(apply(data,2,var))
for (i in 2:nc){
set.seed(seed)
wss[i] <- sum(kmeans(data, centers=i)$withinss)}
plot(1:nc, wss, type="b", xlab="Number of Clusters",
ylab="Within groups sum of squares")}
fit <- data_analysis_men %>%
select(M_Y00:`M_Y85+`) %>%
scale() %>%
kmeans(., centers=2, nstart=10)
i <- order(fit$cluster)
map4 <- data.frame(year = 2010, geo=data_analysis_men$geo[i], cluster=fit$cluster[i]) %>%
inner_join(gisco, ., by = c("NUTS_ID" = "geo"))
ggplot(map4) +
geom_sf(aes(fill = factor(cluster)), colour = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Clustering EU regions (NUTS2) by Male Death Rates in 2010") +
labs(fill = "Cluster")
data_analysis_men <- data_analysis_wide %>%
select(geo, time, starts_with("M_")) %>%
filter(time >= 2002) %>%
arrange(geo)
for (i in unique(data_analysis_men$time)) {
#set.seed(123456789)
data_analysis_men %>%
filter(time == i) %>%
select(M_Y00:`M_Y85+`) %>%
scale() %>%
wssplot(., nc=6)
}
map5 <- data.frame()
for (i in unique(data_analysis_men$time)) {
set.seed(12)
fit <- data_analysis_men %>%
filter(time == i) %>%
select(M_Y00:`M_Y85+`) %>%
scale() %>%
kmeans(., centers=2, nstart=50)
j <- order(fit$cluster)
map5 <- map5 %>% bind_rows(data.frame(time = i, geo = filter(data_analysis_men, time == i)$geo[j], cluster=as.factor(fit$cluster[j])))
}
map5 <- map5 %>% inner_join(gisco, ., by = c("NUTS_ID" = "geo"))
require(forcats)
map5 <- map5 %>% mutate(cluster = ifelse(time %in% 2004:2012, fct_rev(cluster), cluster))
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
facet_wrap(. ~ time, ncol = 5) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
ggtitle("Clustering EU regions (NUTS2) by Male Death Rates 2002 - 2016") +
labs(fill = "Cluster")
ggplot(map5) +
geom_sf(aes(fill = factor(cluster)), color = "transparent") +
geom_sf(fill = "transparent", size = 0.1, data = gisco0) +
coord_sf(xlim = c(-10, +30), ylim = c(35, 70)) +
theme(panel.grid.major = element_line(colour = 'transparent'),
axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank()) +
labs(title = 'Clustering EU regions (NUTS2) by Male Death Rates {current_frame}', fill = "Cluster") +
transition_manual(time)
